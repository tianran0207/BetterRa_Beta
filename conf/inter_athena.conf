//--------------------------------------------------------------
// rAthena 內部通訊配置文件
//--------------------------------------------------------------
// 這個配置文件會被登錄服務器、角色服務器以及地圖服務器讀取. 
//--------------------------------------------------------------

// 是否記錄內部通訊日志? 
// 這個選項啟用后, 當一個公會被創建、被解散、占領新城池時
// 都會往char_server_db選項所指向的數据庫中的interlog表寫入
// 日志信息, 除此之外并不會記錄其他的東西. 
log_inter: 1

// 內部通訊日志文件名
// 這個選項已經被rAthena棄用
// 代碼中根本沒有任何地方使用到此選項
// 大家請無視他, 避免浪費表情了
inter_log_filename: log/inter.log

// 玩家之間組隊均分經驗的等級限制
// 默認情況下, 隊伍中級別最高的人和最低的人之間相差等級不能超過15級
// 否則就無法開啟經驗均分選項
party_share_level: 15


// Amount of status points a new character will start with
start_status_points: 48
// 您可以為MySQL的表指定特殊的編碼. 
// 注意: 這個特性只有在MySQL版本在4.1及更新的版本中才支持. 
//
// BetterRA 特性支持
// ------------------
// 內碼表自動判定机制
// 若設置為 auto 則會根据數据庫的字符集自動選用內碼表
// 1、當數据庫為 utf8 字符集時
//    - 若服務器是GBK語言系統時, 則自動使用 gbk 內碼表与數据庫通信
//    - 若服務器是BIG5語言系統時, 則自動使用 big5 內碼表与數据庫通信
//    - 非以上兩种系統系統, 則使用默認內碼表与數据庫通信
// 2、當數据庫為 latin1 字符集時, 自動使用 latin1 內碼表与數据庫通信
// 3、當數据庫為 gbk 字符集時, 自動使用 gbk 內碼表与數据庫通信
// 4、當數据庫為 big5 字符集時, 自動使用 big5 內碼表与數据庫通信
//
// 下方的 login_codepage、ipban_codepage、log_codepage 選項与此選項同理
default_codepage: auto

// 接下來涉及到的几個數据庫服務器的IP設置中, 若您的數据庫服務器就是運行rAthena
// 的同一台机器的話, 那么請注意以下几點建議: 
// 
// 1、如果您將rAthena運行于Linux系統, 那么對Linux來說理想情況下IP地址應該
//    使用localhost而不是127.0.0.1
// 
// 2、如果您將rAthena運行于Windows系統, 那么建議將IP地址設置為127.0.0.1
// 
// 如果您在Linux系統下碰到類似"Can't connect to local MySQL server through 
// socket '/tmp/mysql.sock' (2)"的提示, 那么請果斷將localhost改成127.0.0.1

// 全局數据庫配置

// 登錄服務器的 MySQL 連接配置信息
// 注意: login_server_ip 如果是域名, 那么禁止超過63個字符(包括標點符號)
login_server_ip: 127.0.0.1
login_server_port: 3306
login_server_id: ragnarok
login_server_pw: ragnarok
login_server_db: ragnarok
login_codepage: auto
login_case_sensitive: no

// 注意: ipban_db_ip 如果是域名, 那么禁止超過63個字符(包括標點符號)
ipban_db_ip: 127.0.0.1
ipban_db_port: 3306
ipban_db_id: ragnarok
ipban_db_pw: ragnarok
ipban_db_db: ragnarok
ipban_codepage: auto

// 角色服務器的 MySQL 連接配置信息
// 注意: char_server_ip 如果是域名, 那么禁止超過63個字符(包括標點符號)
char_server_ip: 127.0.0.1
char_server_port: 3306
char_server_id: ragnarok
char_server_pw: ragnarok
char_server_db: ragnarok

// 地圖服務器的 MySQL 連接配置信息
// 注意: map_server_ip 如果是域名, 那么禁止超過63個字符(包括標點符號)
map_server_ip: 127.0.0.1
map_server_port: 3306
map_server_id: ragnarok
map_server_pw: ragnarok
map_server_db: ragnarok

// 日志數据庫的 MySQL 連接配置信息
// 注意: log_db_ip 如果是域名, 那么禁止超過63個字符(包括標點符號)
log_db_ip: 127.0.0.1
log_db_port: 3306
log_db_id: ragnarok
log_db_pw: ragnarok
log_db_db: ragnarok
log_codepage: auto
log_login_db: loginlog

// MySQL掉線重連策略設置
// 如果由于某些原因導致rAthena和MySQL數据庫服務器斷開連接, 那么會
// 按照下面配置的方式來嘗試重新連接
// 
// 若mysql_reconnect_type被設置為 1 時: 
//     那么當rAthena斷開和數据庫服務器的連接后, rAthena會嘗試重連數据庫
//     服務器, 如果嘗試了mysql_reconnect_count所指定的次數后還是失敗, 
//     那么rAthena的相關服務將自行關閉
// 
// 若mysql_reconnect_type被設置為 2 時(默認): 
//     那么當rAthena斷開和數据庫服務器的連接后, rAthena會無限次嘗試
//     重連數据庫
mysql_reconnect_type: 2
mysql_reconnect_count: 1

// 請不要改變接下來的這些設置, 除非您對數据庫非常的了解, 并且知道自己在
// 做什么事情. 如果沒有充分的理由建議您保持默認, 不要去修改他們

// 配置在 MySQL 數据庫中所有表的名稱

// 登錄服務器相關的數据庫表名配置
// Login Database Tables
login_server_account_db: login
ipban_table: ipbanlist
global_acc_reg_num_table: global_acc_reg_num
global_acc_reg_str_table: global_acc_reg_str

// 角色服務器相關的數据庫表名配置
char_db: char
hotkey_db: hotkey
scdata_db: sc_data
cart_db: cart_inventory
inventory_db: inventory
charlog_db: charlog
skill_db: skill
interlog_db: interlog
memo_db: memo
guild_db: guild
guild_alliance_db: guild_alliance
guild_castle_db: guild_castle
guild_expulsion_db: guild_expulsion
guild_member_db: guild_member
guild_skill_db: guild_skill
guild_position_db: guild_position
guild_storage_db: guild_storage
party_db: party
pet_db: pet
friend_db: friends
mail_db: mail
mail_attachment_db: mail_attachments
auction_db: auction
quest_db: quest
homunculus_db: homunculus
skill_homunculus_db: skill_homunculus
mercenary_db: mercenary
mercenary_owner_db: mercenary_owner
elemental_db: elemental
skillcooldown_db: skillcooldown
bonus_script_db: bonus_script
acc_reg_num_table: acc_reg_num
acc_reg_str_table: acc_reg_str
char_reg_str_table: char_reg_str
char_reg_num_table: char_reg_num
clan_table: clan
clan_alliance_table: clan_alliance

// 地圖服務器相關的數据庫表名配置
buyingstore_table: buyingstores
buyingstore_items_table: buyingstore_items
item_table: item_db
renewal-item_table: item_db_re
item2_table: item_db2
renewal-item2_table: item_db2_re
item_cash_table: item_cash_db
item_cash2_table: item_cash_db2
mob_table: mob_db
renewal-mob_table: mob_db_re
mob2_table: mob_db2
renewal-mob2_table: mob_db2_re
mob_skill_table: mob_skill_db
renewal-mob_skill_table: mob_skill_db_re
mob_skill2_table: mob_skill_db2
renewal-mob_skill2_table: mob_skill_db2_re
mapreg_table: mapreg
sales_table: sales
vending_table: vendings
vending_items_table: vending_items
market_table: market
roulette_table: db_roulette
guild_storage_log: guild_storage_log

// 是否讓地圖服務器加載 SQL 版本的 item_db, mob_db 以及 mob_skill_db? (yes/no)
// 若改成yes的話, 地圖服務器將不會再加載db目錄中的item_db.txt、
// mob_db.txt 及 mob_skill_db.txt 而是轉而加載這些文件在數据庫中對應的表
// 
// 將此選項改成yes之前, 您還需要先往map_server_db選項所指向的數据庫中
// 導入下面的SQL腳本文件, 否則map-server將找不到物品和魔物等數据: 
// 
// 無論复興前后的版本, 請導入 sql-files\item_cash_db.sql
// 無論复興前后的版本, 請導入 sql-files\item_cash_db2.sql
// 复興前的版本, 請導入 sql-files\item_db.sql       复興后請導入 sql-files\item_db_re.sql
// 复興前的版本, 請導入 sql-files\item_db2.sql      复興后請導入 sql-files\item_db2_re.sql
// 复興前的版本, 請導入 sql-files\mob_db.sql        复興后請導入 sql-files\mob_db_re.sql
// 复興前的版本, 請導入 sql-files\mob_db2.sql       复興后請導入 sql-files\mob_db2_re.sql
// 复興前的版本, 請導入 sql-files\mob_skill_db.sql  复興后請導入 sql-files\mob_skill_db_re.sql
// 复興前的版本, 請導入 sql-files\mob_skill_db2.sql 复興后請導入 sql-files\mob_skill_db2_re.sql
// 
// 導入之后, 也就意味著item_db等信息都已經被搬入到SQL數据庫中了, 
// 以后您想再修改item_db等信息時, 將不再是修改db\[pre-]re\item_db.txt文件了
// 而是去SQL數据庫中直接更新對應的表
use_sql_db: no

inter_server_conf: inter_server.yml

import: conf/import/inter_conf.txt
