//--------------------------------------------------------------
// rAthena 战斗配置文件
// 最初的翻译由 Peter Kieser <pfak@telus.net> 完成
// 由 Ancyker 改写成纯英文
//--------------------------------------------------------------
//   开关选项: 可以用 on/off, yes/no 或 1/0 来表示开关
// 百分比选项: 填写100即表示100%
//   掩码选项: 没有特殊说明的情况下, 默认用来表示游戏中各单位的类型
//             1: 玩家, 2: 魔物, 4: 宠物, 8: 生命体, 16:佣兵, 128:NPC, 512:元素精灵
//             掩码选项一个数值可以表示里面有多个内容. 
//             例如: 若您想表示玩家和宠物, 那么只需将1和4相加, 填写5即可
//--------------------------------------------------------------

// 哪些单位能拥有基础攻击值(即BaseAtk值)
// 或者说, 能够让他的str属性, 影响到他输出的伤害? (掩码选项)
// 默认值是 0x29F
enable_baseatk: 0x9
enable_baseatk_renewal: 0x29F

// 哪些单位能够掌握完全回避? (掩码选项)
// 这里需要注意, 能掌握不代表它已经会, 只能表示它能会.
// 默认值是 1, 表示此选项包含: 玩家(1)
enable_perfect_flee: 1

// 哪些单位能够产生暴击? (掩码选项)
// 注意: 有些技能会无视此设置, 该出现暴击的时候还是会出现暴击的
// 默认值是 17, 表示此选项包含: 玩家(1) + 佣兵(16)
enable_critical: 17

// 魔物产生暴击的倍率 (百分比选项)
mob_critical_rate: 100

// 除了玩家和魔物外, 其他单位(宠物、生命体、佣兵)产生暴击的倍率 (百分比选项)
critical_rate: 100

// 普通攻击是否会导致指定单位有移动延迟? (掩码选项)
// 
// 若将某种单位设置为不会导致移动延迟, 那么它将在攻击发起之后立刻就可以移动
// (攻击动画过程和移动动画过程或许会被客户端省略, 可能会产生攻击动画没播放完毕、
// 或者魔物瞬间移动到你身边的错觉)
// 
// 否则, 这个'移动延迟'的时间长度将等于单位的'攻击动画'时间,
// 这也意味着只有攻击动画播放结束了, 指定的单位才能够进行移动
//
// 默认值是 15, 表示此选项包含: 玩家(1) + 魔物(2) + 宠物(4) + 生命体(8)
attack_walk_delay: 15

// 被攻击后移动延迟. (百分比选项)
// 被击中后 "无法行走" 延迟(僵直时间)按被攻击后伤害动画持续时间的百分比调整
// 注意: 仅影响单次攻击伤害的延迟，并非多次攻击 "multihit_delay"
pc_damage_walk_delay_rate: 20
damage_walk_delay_rate: 100

// 多段攻击后移动延
// 多段攻击延迟 定义为 单次受到的攻击为数个HIT - 既 雷鸣术，火箭术等等（既多段产生伤害）
// 多段攻击延迟公式： "(造成伤害次数 -1) * 叠加攻击延迟设置（既以下设置）"毫秒.
// 例子：80即为被“音速投掷”攻击后收到的僵直
// 例子：240既为被技能的最后一击打完后才能行动，类似被“雷鸣”攻击后的僵直
multihit_delay: 80

// “被攻击后移动延迟" 和 “多段攻击延迟”延长百分比 (百分比选项)
// (写 no 或者 0  将有无限霸体效果)
player_damage_delay_rate: 100

// 是否使用种族和自身属性判断是否为 "不死" 属性
// 0 = 以不死属性判断不死属性
// 1 = 以不死种族判断不死属性
// 2 = 以上两种 (either one works)
undead_detect_type: 0

// 在受到角色自身 属性 的攻击后，HP是否可以恢复？ (开关选项)
attribute_recover: yes

// 普通攻击的最小和最大命中率是多少? (百分比选项)
// 若最小命中率(min_hitrate)大于最大命中率(max_hitrate), 
// 则最小命中率(min_hitrate)会等同于最大命中率(max_hitrate)
min_hitrate: 5
max_hitrate: 100

// 当有超过 agi_penalty_count 指定个数的魔物把玩家当做攻击目标时,
// 以哪种方式对玩家的回避率进行减算(下称为回避率惩罚)?
// 
// 0 = 不减少回避率
// 1 = 减少 agi_penalty_num 选项指定百分比的回避率
//     例如: 当 agi_penalty_num 填写 10, 则意味着围攻你的敌人在
//           超过 agi_penalty_count 设定的数量之后, 每增加一个敌人你就会降低 10% 的回避率
// 2 = 减少 agi_penalty_num 选项指定数值的回避率
//     例如: 当 agi_penalty_num 填写 20, 则意味着围攻你的敌人在
//           超过 agi_penalty_count 设定的数量之后, 每增加一个敌人你就会降低 20 点回避率
//
// 在现实生活中, 如果你动作很灵敏, 和一个人打架时你可以轻松回避的话,
// 那么当你以一敌十的时候, 你的回避率肯定是会降低的...
// 
// 这个机制与此类似, 当玩家被很多魔物围攻的时候, 你的回避率也会相应减少.
agi_penalty_type: 1

// 当回避率惩罚机制被启用时(或者说, 当 agi_penalty_type 不等于 0 时), 
// 哪种类型的单位会受到该机制的影响? (掩码选项)
// 
// 默认值是 1, 表示只有 玩家(1) 会受到影响.
agi_penalty_target: 1

// 超过多少个敌人将自己作为攻击目标时, 就开始触发回避率惩罚机制?
agi_penalty_count: 3

// 当攻击自己的敌人数量大于 agi_penalty_count 指定的魔物数量后, 
// 每增加一个敌人, 扣减多少回避率(如果 agi_penalty_type 为 1 则这里表示百分比, 为 2 则表示具体数值)
agi_penalty_num: 10

// 当有超过 vit_penalty_count 指定个数的魔物把玩家当做攻击目标时,
// 以哪种方式对玩家的VIT属性带来的物理防御力进行减算(下称为物理防御力惩罚)?
// 0 = 不减少物理防御力
// 1 = 减少 vit_penalty_num 选项指定百分比的物理防御力
//     例如: 当 vit_penalty_num 填写 10, 则意味着围攻你的敌人在
//           超过 vit_penalty_count 设定的数量之后, 每增加一个敌人你就会降低 10% 的物理防御力
// 2 = 减少 vit_penalty_num 选项指定数值的物理防御力
//     例如: 当 vit_penalty_num 填写 20, 则意味着围攻你的敌人在
//           超过 vit_penalty_count 设定的数量之后, 每增加一个敌人你就会降低 20 点物理防御力
vit_penalty_type: 1

// 当物理防御力惩罚机制被启用时(或者说, 当 vit_penalty_type 不等于 0 时), 
// 哪种类型的单位会受到该机制的影响? (掩码选项)
// 
// 默认值是 1, 表示只有 玩家(1) 会受到影响.
vit_penalty_target: 1

// 超过多少个敌人将自己作为攻击目标时, 就开始触发物理防御力惩罚机制?
vit_penalty_count: 3

// 当攻击自己的敌人数量大于 vit_penalty_count 指定的魔物数量后, 
// 每增加一个敌人, 扣减多少物理防御力(如果 vit_penalty_type 为 1 则这里表示百分比, 为 2 则表示具体数值)
vit_penalty_num: 5

// 在受到物理攻击后，利用“备选”方式计算DEF计算
// 如果为 0, 禁用该设置 - DEF计算后会计算DEF2的数值 （翻译：实际待测试）
// 如果为 1, 启动该设置 - DEF仅为 DEF自身
// 例子： 10 + 50DEF  = 0 + (10 * type + 50)
weapon_defense_type: 0

// MDEF - 相同
magic_defense_type: 0

// 每次攻击时改变攻击者的方向以面对被攻击目标 (掩码选项)
// 注释：注意：在官方服务器上，防火墙等一些技能的击退总是基于
// 角色最后一个人物面朝的方向。即使向完全不同的方向进攻，
// 击退方向不会改变。例如：如果你在往北走，对在你南方的目标释放火墙，目标仍会被推向南方
// 设置为 无法移动 的魔物总是会被撞回南方，因为他们的默认行动方向是北方.
attack_direction_change: 0

// 如果攻击者本身的攻击属性为 "无属性", 将对念属性目标造成 100% 的伤害
// 主要用于非玩家对念属性目标造成全段伤害而设置
attack_attr_none: 14

// 设备装备可被损坏率 (技能计算前的基础概率 - 比如铁匠的技能 此设置将额外添加概率)
// 1 = 0.01% 默认为：0
equip_natural_break_rate: 0

// 装备可能会损坏的总体比率。 (百分比选项)
// 这个会影响 惩罚类 装备损害概率
// 例如：如贤者的 "火属性附加" 技能有概率让目标武器损坏 - 该值大于 0 将有该概率让武器损坏，默认为100%。既如果“火属性附加”技能失败后判定目标武器为被破坏，既100%目标武器被破坏，否为将为以下设置值计算破坏率
// 换句话说 如果设置为60%，原本 "火属性附加" 技能将破坏的武器将有 60% 被破坏
equip_self_break_rate: 100

// 攻击目标时，对方装备会损坏的概率（仅限于带有导致损坏的技能）. (百分比选项)
// 例如 强酸攻击 和 野蛮凶砍，默认为100%
equip_skill_break_rate: 100

// 使用武器进行攻击时, 是否会延迟一小会儿才产生实际伤害? (开关选项)
// 注意: 官服设置为 yes, 尽管这会降低一些性能.
delay_battle_damage: yes

// 使用弓系武器或枪系武器时, 是否消耗箭矢或子弹?
// 0 = 不消耗箭矢或子弹
// 1 = 要消耗 (此为默认值)
// 2 = 要消耗, 哪怕是使用的技能没有明确指定需要消耗何种箭矢. 
//     只要这个技能是可造成伤害的, 技能要求的武器类型是“猎弓”、“左轮手枪”、“榴弹枪”, 
//     且这个技能的攻击类型是weapon, 那么就算它不指定需要消耗那种箭矢, 
//     也会默认消耗1个任何类型的弹药(箭矢、子弹等). 
//     (哪怕技能是因为卡片效果习得的, 或是使用“抄袭、复制”技能抄来的, 
//     都会自动判断是否需要消耗箭矢)
//
// 感觉选项 2 是为了“避免出现有些技能由于技能数据库不完整, 从而导致无需消耗箭矢”而
// 设计的一个严格选项, 应该没有太大的用处. 
arrow_decrement: 1

// 脱下武器时，是否将子弹或者箭失脱下
// 官服默认 "yes".
ammo_unequip: yes

// 当装备子弹或者箭失时，是否检查穿戴了对应的武器?
// 官服默认 "yes".
ammo_check_weapon: yes

// 由物品脚本触发的 'autospell' 在自动咏唱技能之前, 是否先检查与目标的距离?
// 官服的设定为 "no", 如果修改为 "yes" 的话, 会让技能使用他们在 skill_db 中定义的距离来进行判断.
// 例如: 音速投掷要求在距离目标2格范围内, 才能被 'autospell' 自动咏唱发动.
// 此设置同时也对 autospellwhenhit 脚本指令有效.
autospell_check_range: no

// 如果 攻击者 和 被攻击者 在同一个地图格子，是否将被攻击者击退至左边格子?
// 官服默认为 "yes", 如果为 "no" 将把被攻击者击退至攻击者身后的格子.
knockback_left: yes

// 玩家是否能够同时召唤出猎鹰和野狼? (开关选项)
// 官服默认禁止玩家同时召唤猎鹰和野狼, 推荐的默认值为no!
warg_can_falcon: no

// 受到攻击时，目标如果移出攻击者的视野范围是否可以躲避伤害?
// 官服默认 "no".
snap_dodge: no
